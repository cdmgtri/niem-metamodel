digraph G {
  layout = dot;
  edge [fontname = "Helvetica", fontsize = 10, dir = forward];
  node [fontname = "Helvetica", fontsize = 10, width = 0, height = 0, label="\N\l"];
  rankdir = LR;

  node [shape=box, style=rounded];

  { rank = same;
  message_xml [label="Message\n(XML data)"];
  message_json [label="Message\n(JSON schema)"];
  }
  
  { rank = same;
  schema_xsd [label="Schema for Messages\n(XSD)"];
  schema_json [label="Schema for Messages\n(JSON Schema)"];
  uml_model [label="UML model\n(XMI)"];
  api_spec [label="API Specification\n(OpenAPI)"];
  }
  
  { rank = same; model; metamodel; }

  edge [label="validates"];
  schema_xsd -> message_xml;
  schema_json -> message_json;

  model [label="Model for Messages\n"];
  model -> { schema_xsd schema_json uml_model api_spec }  [label="translates to"];
  model -> { message_xml message_json } [label="defines"];
  

//  trans [label="Model-to-XSD transformer\n(XSLT)"];
//  model -> trans -> schema;

  metaschema [label="Schema for Models\n(XSD)"];
  metaschema -> model [label="validates"];

  metamodel [label="Model for Models\nMetamodel"];
  metamodel -> model [label="defines"];

//  trans2 [label="Model-to-XSD transformer\n(XSLT)"];
  metamodel -> metaschema [label="translates to"];

  metaschema -> metamodel [label="validates"];
  

}
